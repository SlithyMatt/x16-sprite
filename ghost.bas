1 REM PROGRAM: SPRITE TEST

98 REM GHOST 0: MAGENTA, USING STANDARD PALLETE, OFFSET 0
99 REM CHANGE PALETTE BEYOND OFFSET 0
100 VPOKE $1,$FA28,$00 : REM GHOST 1: RED
110 VPOKE $1,$FA29,$0E
120 VPOKE $1,$FA22,$FF
130 VPOKE $1,$FA23,$0F
140 VPOKE $1,$FA2C,$0A
150 VPOKE $1,$FA2D,$00
200 VPOKE $1,$FA48,$8E : REM GHOST 2: LIGHT BLUE
210 VPOKE $1,$FA49,$08
220 VPOKE $1,$FA42,$FF
230 VPOKE $1,$FA43,$0F
240 VPOKE $1,$FA4C,$0A
250 VPOKE $1,$FA4D,$00
300 VPOKE $1,$FA68,$80 : REM GHOST 3: ORANGE
310 VPOKE $1,$FA69,$0E
320 VPOKE $1,$FA62,$FF
330 VPOKE $1,$FA63,$0F
340 VPOKE $1,$FA6C,$0A
350 VPOKE $1,$FA6D,$00



999 REM LOAD BITMAP 1 INTO VRAM AT $04000
1000 DATA $00,$00,$00,$44,$40,$00,$00,$00
1010 DATA $00,$00,$44,$44,$44,$40,$00,$00
1020 DATA $00,$44,$44,$44,$44,$44,$40,$00
1030 DATA $04,$44,$44,$44,$44,$44,$44,$00
1040 DATA $44,$44,$11,$44,$41,$14,$44,$40
1050 DATA $44,$41,$66,$14,$16,$61,$44,$40
1060 DATA $44,$41,$66,$14,$16,$61,$44,$40
1070 DATA $44,$44,$11,$44,$41,$14,$44,$40
1080 DATA $44,$44,$44,$44,$44,$44,$44,$40
1090 DATA $44,$44,$44,$44,$44,$44,$44,$40
1100 DATA $44,$44,$44,$44,$44,$44,$44,$40
1110 DATA $44,$44,$44,$44,$44,$44,$44,$40
1120 DATA $44,$44,$44,$44,$44,$44,$44,$40
1130 DATA $44,$44,$44,$44,$44,$44,$44,$40
1140 DATA $44,$40,$44,$40,$44,$40,$44,$40
1150 DATA $04,$00,$04,$00,$04,$00,$04,$00
1300 FOR I=O TO 127
1400 READ PX
1500 VPOKE $0,$4000+I,PX
1600 NEXT I

1699 REM CURRENT SPRITE OFFSET
1700 SO = $00
1799 REM CURRENT PALETTE OFFSET (GHOST)
1800 PO = 0

1999 REM ENABLE SPRITES
2000 POKE $9F29,($40 OR PEEK($9F29))

2099 REM SET SPRITE DATA
2100 VPOKE $1,$FC10,SO
2200 VPOKE $1,$FC11,$02 : REM 4BPP, ADDRESS $04000
2300 VPOKE $1,$FC12,$80 : REM XPOS 128
2400 VPOKE $1,$FC13,$00
2450 X = 128
2500 VPOKE $1,$FC14,$80 : REM YPOS 128
2600 VPOKE $1,$FC15,$00
2650 Y = 128
2700 VPOKE $1,$FC16,$0C : REM NO COLLISION, ZDEPTH 3, NO FLIP
2800 VPOKE $1,$FC17,$50+PO : REM 16X16 PIXELS, PALETTE OFFSET PO

2999 REM LOAD BITMAP 2 INTO VRAM AT $04080
3000 DATA $00,$00,$00,$44,$40,$00,$00,$00
3010 DATA $00,$00,$44,$44,$44,$40,$00,$00
3020 DATA $00,$44,$44,$44,$44,$44,$40,$00
3030 DATA $04,$44,$44,$44,$44,$44,$44,$00
3040 DATA $44,$44,$11,$44,$41,$14,$44,$40
3050 DATA $44,$41,$16,$64,$11,$66,$44,$40
3060 DATA $44,$41,$16,$64,$11,$66,$44,$40
3070 DATA $44,$44,$11,$44,$41,$14,$44,$40
3080 DATA $44,$44,$44,$44,$44,$44,$44,$40
3090 DATA $44,$44,$44,$44,$44,$44,$44,$40
3100 DATA $44,$44,$44,$44,$44,$44,$44,$40
3110 DATA $44,$44,$44,$44,$44,$44,$44,$40
3120 DATA $44,$44,$44,$44,$44,$44,$44,$40
3130 DATA $44,$44,$44,$44,$44,$44,$44,$40
3140 DATA $44,$40,$44,$40,$44,$40,$44,$40
3150 DATA $04,$00,$04,$00,$04,$00,$04,$00
3160 FOR I=O TO 127
3170 READ PX
3180 VPOKE $0,$4080+I,PX
3190 NEXT I

3199 REM LOAD BITMAP 3 INTO VRAM AT $04100
3200 DATA $00,$00,$00,$44,$40,$00,$00,$00
3210 DATA $00,$00,$44,$44,$44,$40,$00,$00
3220 DATA $00,$44,$44,$44,$44,$44,$40,$00
3230 DATA $04,$44,$44,$44,$44,$44,$44,$00
3240 DATA $44,$44,$11,$44,$41,$14,$44,$40
3250 DATA $44,$41,$11,$14,$11,$11,$44,$40
3260 DATA $44,$41,$66,$14,$16,$61,$44,$40
3270 DATA $44,$44,$66,$44,$46,$64,$44,$40
3280 DATA $44,$44,$44,$44,$44,$44,$44,$40
3290 DATA $44,$44,$44,$44,$44,$44,$44,$40
3300 DATA $44,$44,$44,$44,$44,$44,$44,$40
3310 DATA $44,$44,$44,$44,$44,$44,$44,$40
3320 DATA $44,$44,$44,$44,$44,$44,$44,$40
3330 DATA $44,$44,$44,$44,$44,$44,$44,$40
3340 DATA $44,$40,$44,$40,$44,$40,$44,$40
3350 DATA $04,$00,$04,$00,$04,$00,$04,$00
3360 FOR I=O TO 127
3370 READ PX
3380 VPOKE $0,$4100+I,PX
3390 NEXT I

3399 REM LOAD BITMAP 4 INTO VRAM AT $04180
3400 DATA $00,$00,$00,$44,$40,$00,$00,$00
3410 DATA $00,$00,$44,$44,$44,$40,$00,$00
3420 DATA $00,$44,$44,$44,$44,$44,$40,$00
3430 DATA $04,$44,$44,$44,$44,$44,$44,$00
3440 DATA $44,$44,$11,$44,$41,$14,$44,$40
3450 DATA $44,$46,$61,$14,$66,$11,$44,$40
3460 DATA $44,$46,$61,$14,$66,$11,$44,$40
3470 DATA $44,$44,$11,$44,$41,$14,$44,$40
3480 DATA $44,$44,$44,$44,$44,$44,$44,$40
3490 DATA $44,$44,$44,$44,$44,$44,$44,$40
3500 DATA $44,$44,$44,$44,$44,$44,$44,$40
3510 DATA $44,$44,$44,$44,$44,$44,$44,$40
3520 DATA $44,$44,$44,$44,$44,$44,$44,$40
3530 DATA $44,$44,$44,$44,$44,$44,$44,$40
3540 DATA $44,$40,$44,$40,$44,$40,$44,$40
3550 DATA $04,$00,$04,$00,$04,$00,$04,$00
3560 FOR I=O TO 127
3570 READ PX
3580 VPOKE $0,$4180+I,PX
3590 NEXT I

3599 REM LOAD BITMAP 5 INTO VRAM AT $04200
3600 DATA $00,$00,$00,$44,$40,$00,$00,$00
3610 DATA $00,$00,$44,$44,$44,$40,$00,$00
3620 DATA $00,$44,$44,$44,$44,$44,$40,$00
3630 DATA $04,$44,$44,$44,$44,$44,$44,$00
3640 DATA $44,$44,$66,$44,$46,$64,$44,$40
3650 DATA $44,$41,$66,$14,$16,$61,$44,$40
3660 DATA $44,$41,$11,$14,$11,$11,$44,$40
3670 DATA $44,$44,$11,$44,$41,$14,$44,$40
3680 DATA $44,$44,$44,$44,$44,$44,$44,$40
3690 DATA $44,$44,$44,$44,$44,$44,$44,$40
3700 DATA $44,$44,$44,$44,$44,$44,$44,$40
3710 DATA $44,$44,$44,$44,$44,$44,$44,$40
3720 DATA $44,$44,$44,$44,$44,$44,$44,$40
3730 DATA $44,$44,$44,$44,$44,$44,$44,$40
3740 DATA $44,$40,$44,$40,$44,$40,$44,$40
3750 DATA $04,$00,$04,$00,$04,$00,$04,$00
3760 FOR I=O TO 127
3770 READ PX
3780 VPOKE $0,$4200+I,PX
3790 NEXT I


4000 GET A$
4100 IF A$="" THEN GOTO 4000
4200 IF A$=CHR$(29) AND X < 640 THEN GOSUB 5000
4300 IF A$=CHR$(157) AND X > 0 THEN GOSUB 6000
4400 IF A$=CHR$(17) AND Y < 480 THEN GOSUB 7000
4500 IF A$=CHR$(145) AND Y > 0 THEN GOSUB 8000
4550 IF A$=" " THEN GOSUB 10000
4600 GOTO 4000

4999 REM MOVE RIGHT
5000 X = X+1
5100 VPOKE $1,$FC12,X AND $FF
5200 VPOKE $1,$FC13,(X AND $0300)/$100
5250 SO = $04
5300 GOSUB 9000
5500 RETURN

5999 REM MOVE LEFT
6000 X = X-1
6100 VPOKE $1,$FC12,X AND $FF
6200 VPOKE $1,$FC13,(X AND $0300)/$100
6250 SO = $0C
6300 GOSUB 9000
6500 RETURN

6999 REM MOVE DOWN
7000 Y = Y+1
7100 VPOKE $1,$FC14,Y AND $FF
7200 VPOKE $1,$FC15,(Y AND $0300)/$100
7250 SO = $08
7300 GOSUB 9000
7400 RETURN

7999 REM SCROLL UP
8000 Y = Y-1
8100 VPOKE $1,$FC14,Y AND $FF
8200 VPOKE $1,$FC15,(Y AND $0300)/$100
8250 SO = $10
8300 GOSUB 9000
8400 RETURN

8999 REM NEXT FRAME
9000 VPOKE $1,$FC10,SO
9300 CP = (((X+8)/8 AND $7F) + ((Y+8)*16 AND $7F80)) * 2 + 1
9400 IF CP > $3FFF THEN CP = $3FFF
9500 VPOKE 0,CP,$EF
9600 RETURN

9999 REM CHANGE COLOR
10000 PO = PO + 1
10100 IF PO > 3 THEN PO = 0
10200 VPOKE $1,$FC17,$50+PO
10300 RETURN
